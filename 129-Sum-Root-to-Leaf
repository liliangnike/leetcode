/*
You are given the root of a binary tree containing digits from 0 to 9 only.

Each root-to-leaf path in the tree represents a number.

For example, the root-to-leaf path 1 -> 2 -> 3 represents the number 123.
Return the total sum of all root-to-leaf numbers. Test cases are generated so that the answer will fit in a 32-bit integer.

A leaf node is a node with no children.

*/

class Solution {
public:
    int sum;
    
    void dfs(TreeNode* node, int val)
    {
        if(!node) return;
        
        // preorder tranverse
        val = val * 10 + node->val;
        
        if(node->left == nullptr && node->right == nullptr)
            sum += val;
        
        dfs(node->left, val);
        dfs(node->right, val);
    }
    
    int sumNumbers(TreeNode* root) {
        sum = 0;
        
        dfs(root, 0);
        
        return sum;
    }
};


